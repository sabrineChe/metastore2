buildscript {
    repositories { 
        mavenLocal()
        jcenter()
        mavenCentral()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.2.2.RELEASE")
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
        //classpath 'org.kordamp.gradle:stats-gradle-plugin:0.2.2'
    }
}

plugins { 
    id 'io.franzbecker.gradle-lombok' version '1.14'
    id "io.spring.dependency-management" version "1.0.8.RELEASE" 
    id "com.github.kt3k.coveralls" version "2.8.1" 
    id "org.owasp.dependencycheck" version "3.1.2"
    id "org.asciidoctor.convert" version "1.5.3"
    id 'net.researchgate.release' version '2.8.1'
}

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

description = 'General purpose metadata repository and schema registry service'
group = 'edu.kit.datamanager'

println "Building ${name} version: ${version}"


repositories {
    mavenLocal() 
    jcenter()
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
 
configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

lombok {
    version = '1.18.10'
    sha256 = ""
}

if (project.hasProperty('travis')) {
    println 'Using travis profile for building ' + project.getName()
    apply from: 'gradle/profile-travis.gradle'
} else if (project.hasProperty('release')) {
    println 'Using release profile for building ' + project.getName()
    apply from: 'gradle/profile-release.gradle'   
} 

dependencies {
    implementation "org.javers:javers-spring-boot-starter-sql:3.9.0"
    implementation "org.springframework.boot:spring-boot-starter-data-rest"
    implementation "org.springframework.boot:spring-boot-starter-mail"
   
    implementation "org.springdoc:springdoc-openapi-ui:1.4.8"
    implementation "org.springdoc:springdoc-openapi-data-rest:1.4.8"

    // driver for postgres
    implementation "org.postgresql:postgresql:42.2.1"
    //driver for h2
    implementation "com.h2database:h2:1.4.200"
    
    
    implementation "org.apache.tika:tika-core:1.18"
    implementation "org.javers:javers-core:5.3.2"

    // JSON validator
    implementation "com.networknt:json-schema-validator:1.0.43"
  
    // datamanager
    implementation "edu.kit.datamanager:service-base:0.1"

    runtimeOnly    'org.apache.httpcomponents:httpclient:4.5.6'

    testImplementation "org.springframework.restdocs:spring-restdocs-mockmvc"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.springframework:spring-test"
    testImplementation "org.springframework.security:spring-security-test"
   
    //Java 11 Support 
    testImplementation "org.mockito:mockito-core:2.18.0"
    testImplementation "org.powermock:powermock-module-junit4:2.0.0-beta.5"
    testImplementation "org.powermock:powermock-api-mockito2:2.0.0-beta.5"
    testImplementation "junit:junit:4.13.1"

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:2.0.2.RELEASE'
    testImplementation 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.9.2'
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor:2.0.2.RELEASE'
    asciidoctor 'com.github.allati.asciidoctor.monotree:asciidoctor-extension-monotree:0.0.1'
}

bootJar {
    manifest {
        attributes 'Main-Class': 'org.springframework.boot.loader.PropertiesLauncher'
    }
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
    launchScript()
}

test {
    finalizedBy jacocoTestReport
    environment "spring.config.location", "classpath:/test-config/"

    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
    }
}

jacoco {
    toolVersion = "0.8.5"
}

// task for printing project name.
task printProjectName {
    doLast {
        println "${project.name}"
    }
}
